select calendar_date,
	iif(extract(weekday from calendar_date) in (6,0), 1, 0) as WEEKEND,
	iif(extract(weekday from calendar_date) in (6,0), 1000000, 0) as WEEKEND_1000000,
	50000*12/365 as CONSTANT_EXPENSES,
	85000*12/365 as CONSTANT_EXPENSES_WITH_ALENA,
	T1.*
from CALENDAR
	left join
	( /*
	SELECT IIf(E.EXPENSE_TYPE_ID = 2, 'Доставка', NULL) AS "Группа товара",
	IIF(ET.NAME IS NOT NULL, ET.NAME, 'Статья не указана') AS "Статья",
	CASE WHEN E.EXPENSE_TYPE_ID IN (2) THEN NULL
		WHEN E.EXPENSE_TYPE_ID IN (5,6,7,10,17) THEN 'Переменные'
		WHEN E.EXPENSE_TYPE_ID IN (11,13,16) THEN 'Постоянные'
		WHEN E.EXPENSE_TYPE_ID IN (3,8,14) THEN 'Инвестиции'
		ELSE 'Тип расходов не указан'
		END	AS "Тип расходов",
	NULL AS "Заказчик",
	NULL AS "Наименование",
	NULL AS "Размер",
	NULL AS "Кол.",
	NULL AS "Скидка, %",
	E.COMMENT AS "Основание", 
	NULL AS "Поставщик",
	DATEADD(SECOND, E.EXPENSE_DATE, cast('1970-01-01 00:00:00' as timestamp)) AS "Дата", 
	COST AS "Сумма",
	COST AS "Сумма оплат",
	NULL AS "Сумма задолженностей",
	0 AS DEBT,
	0 AS RESERVE,
	NULL AS REMAINDER,
	NULL AS EXPECTED,
	NULL AS DELETED_GOOD
FROM EXPENSES E
	LEFT JOIN EXPENSE_TYPES ET ON (ET.ID = E.EXPENSE_TYPE_ID)
	WHERE EXPENSE_TYPE_ID NOT IN (-3,-2,9,4,12,15) AND E.IS_DELETED=0
UNION ALL */
--Доходы от продажи товаров и расходы на их закупку (выданные заказы только без задолженностей и резервированные товары только без предоплаты)
SELECT 	G.ID AS GOOD_ID,
	G.NAME AS GOOD_NAME,
	S.NAME AS SIZE_NAME,
	WI.QUANTITY AS QUANTITY,
	DATEADD(SECOND, W.WAYBILL_DATE, cast('1970-01-01 00:00:00' as timestamp)) AS WDATE, --IIF(W.RESERVE_UNTIL=0,DATEADD(SECOND, W.WAYBILL_DATE, cast('1970-01-01 00:00:00' as timestamp)),DATEADD(SECOND, W.RESERVE_UNTIL, cast('1970-01-01 00:00:00' as timestamp))),
	DATEADD(SECOND, P.PAYMENT_DATE, cast('1970-01-01 00:00:00' as timestamp)) AS PDATE,
	IIF(W.COST>0, WI.QUANTITY*(WI.PRICE-WI.DISCOUNT)*(W.PAID/W.COST), 0) AS PAID,
	IIF(W.COST>0, WI.QUANTITY*(WI.PRICE-WI.DISCOUNT)*(1 - W.PAID/W.COST), 0) AS DEBT,
	IIF(W.COST>0, WI.QUANTITY*(WI.PRICE-WI.DISCOUNT-NC.COST_BROOK)*(P.COST/W.COST), 0) AS PROFIT_BROOK,
	IIF(W.COST>0, WI.QUANTITY*(WI.PRICE-WI.DISCOUNT-NC.COST_DMITROV)*(P.COST/W.COST), 0) AS PROFIT_DMITROV,
	IIF(W.COST>0, WI.QUANTITY*(WI.PRICE-WI.DISCOUNT-NC.COST_BROOK)*(1 - P.COST/W.COST), 0) AS RESERVE_BROOK,
	IIF(W.COST>0, WI.QUANTITY*(WI.PRICE-WI.DISCOUNT-NC.COST_DMITROV)*(1 - P.COST/W.COST), 0) AS RESERVE_DMITROV,
	W.IS_RESERVE AS RESERVED,
	S.IS_DELETED AS SIZE_DELETED
FROM
	WAYBILL_ITEMS WI
	JOIN WAYBILLS W ON (W.ID = WI.WAYBILL_ID)
	LEFT JOIN PAYMENTS P ON (W.ID = P.WAYBILL_ID)
	LEFT JOIN SUPPLIERS SUP ON (SUP.ID = W.CONTRACTOR_ID)
	JOIN GOODS G ON (WI.GOODS_ID = G.ID)
	LEFT JOIN SIZES S ON (WI.SIZE_ID = S.ID)
	LEFT JOIN SIZED_REMAINDERS SR ON (WI.SIZE_ID = SR.SIZE_ID)
	LEFT JOIN GOOD_GROUPS GG ON (GG.ID = G.GROUP_ID)
	JOIN NET_COST NC ON (NC.GOOD_ID = G.ID)
	WHERE W.IS_DELETED = 0 AND WI.IS_DELETED = 0 AND P.IS_DELETED = 0 AND SR.SHOP_ID=0 and W.RECORD_TYPE = -1
	/*
UNION ALL
--Выданные заказы с задолженностями
SELECT 	IIF(GG.NAME IS NOT NULL, GG.NAME, 'Др. товары'),
	IIF(GG.NAME IS NOT NULL, GG.NAME, 'Др. товары'),
	IIf(RECORD_TYPE=1,'Переменные', NULL),
	SUP.NAME,
	G.NAME,
	S.NAME,
	WI.QUANTITY,
	IIf(WI.PRICE>0, WI.DISCOUNT/WI.PRICE*100, 0),
	G.NAME,
	SUP.NAME,
	DATEADD(SECOND, W.WAYBILL_DATE, cast('1970-01-01 00:00:00' as timestamp)), --IIF(W.RESERVE_UNTIL=0,DATEADD(SECOND, W.WAYBILL_DATE, cast('1970-01-01 00:00:00' as timestamp)),DATEADD(SECOND, W.RESERVE_UNTIL, cast('1970-01-01 00:00:00' as timestamp))),
	WI.QUANTITY*(WI.PRICE-WI.DISCOUNT)*(1-W.PAID/W.COST),
	IIf((RECORD_TYPE=-1) AND (W.IS_RESERVE = 0), WI.QUANTITY*(WI.PRICE-WI.DISCOUNT), NULL),
	IIf((RECORD_TYPE=-1) AND (W.IS_RESERVE = 1), WI.QUANTITY*(WI.PRICE-WI.DISCOUNT), NULL),
	1,
	W.IS_RESERVE,
	IIF(SR.SHOP_ID=0, SR.REMAINDER, NULL),
	IIF(SR.SHOP_ID=0, SR.EXPECTED, NULL),
	S.IS_DELETED
FROM
	WAYBILL_ITEMS WI
	JOIN WAYBILLS W ON (W.ID = WI.WAYBILL_ID)
	LEFT JOIN SUPPLIERS SUP ON (SUP.ID = W.CONTRACTOR_ID)
	JOIN GOODS G ON (WI.GOODS_ID = G.ID)
	LEFT JOIN SIZES S ON (WI.SIZE_ID = S.ID)
	LEFT JOIN SIZED_REMAINDERS SR ON (WI.SIZE_ID = SR.SIZE_ID)
	LEFT JOIN GOOD_GROUPS GG ON (GG.ID = G.GROUP_ID)
	WHERE W.IS_DELETED = 0 AND WI.IS_DELETED = 0 AND SR.SHOP_ID=0 AND W.RECORD_TYPE IN (-1,1) AND (W.PAID < W.COST) AND RECORD_TYPE = -1 */
	--
	) as T1
	ON CAST(T1.WDATE AS DATE) = CALENDAR.CALENDAR_DATE